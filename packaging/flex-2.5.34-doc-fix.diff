The documentation has the td_hilen and td_lolen fields in the wrong
order (comapre with tables_shared.h).

Andreas Gruenbacher <agruen@suse.de>

---
 doc/flex.info-1 |   16 ++++++++--------
 doc/flex.texi   |   14 +++++++-------
 2 files changed, 15 insertions(+), 15 deletions(-)

--- doc/flex.info-1.orig
+++ doc/flex.info-1
@@ -4171,8 +4171,8 @@ indexed by name, as described below. The
                      +-------------------------------+
              Table 1 | uint16          td_id;        |
                      | uint16          td_flags;     |
-                     | uint32          td_lolen;     |
                      | uint32          td_hilen;     |
+                     | uint32          td_lolen;     |
                      | void            td_data[];    |
                      | uint8           td_pad64[];   |
                      +-------------------------------+
@@ -4303,12 +4303,6 @@ Fields of a table:
           elements or between structs.  The type of each member is
           determined by the `YYTD_DATA*' bits.
 
-`td_lolen'
-     Specifies the number of elements in the lowest dimension array. If
-     this is a one-dimensional array, then it is simply the number of
-     elements in this array.  The element size is determined by the
-     `td_flags' field.
-
 `td_hilen'
      If `td_hilen' is non-zero, then the data is a two-dimensional
      array.  Otherwise, the data is a one-dimensional array. `td_hilen'
@@ -4324,11 +4318,17 @@ Fields of a table:
      simply skipped. Flex does not currently generate tables of zero
      length.
 
+`td_lolen'
+     Specifies the number of elements in the lowest dimension array. If
+     this is a one-dimensional array, then it is simply the number of
+     elements in this array.  The element size is determined by the
+     `td_flags' field.
+
 `td_data[]'
      The table data. This array may be a one- or two-dimensional array,
      of type `int8', `int16', `int32', `struct yy_trans_info', or
      `struct yy_trans_info*',  depending upon the values in the
-     `td_flags', `td_lolen', and `td_hilen' fields.
+     `td_flags', `td_hilen', and `td_lolen' fields.
 
 `td_pad64[]'
      Zero or more NULL bytes, padding the entire table to the next
--- doc/flex.texi.orig
+++ doc/flex.texi
@@ -5083,8 +5083,8 @@ indexed by name, as described below. The
                 +-------------------------------+
         Table 1 | uint16          td_id;        |
                 | uint16          td_flags;     |
-                | uint32          td_lolen;     |
                 | uint32          td_hilen;     |
+                | uint32          td_lolen;     |
                 | void            td_data[];    |
                 | uint8           td_pad64[];   |
                 +-------------------------------+
@@ -5203,11 +5203,6 @@ two integers. There is no padding betwee
 The type of each member is determined by the @code{YYTD_DATA*} bits.
 @end table
 
-@item td_lolen
-Specifies the number of elements in the lowest dimension array. If this is
-a one-dimensional array, then it is simply the number of elements in this array.
-The element size is determined by the @code{td_flags} field.
-
 @item td_hilen
 If @code{td_hilen} is non-zero, then the data is a two-dimensional array.
 Otherwise, the data is a one-dimensional array. @code{td_hilen} contains the
@@ -5221,11 +5216,16 @@ by the @code{td_flags} field.  It is pos
 array, and no data is loaded, i.e., this table is simply skipped. Flex does not
 currently generate tables of zero length.
 
+@item td_lolen
+Specifies the number of elements in the lowest dimension array. If this is
+a one-dimensional array, then it is simply the number of elements in this array.
+The element size is determined by the @code{td_flags} field.
+
 @item td_data[]
 The table data. This array may be a one- or two-dimensional array, of type
 @code{int8}, @code{int16}, @code{int32}, @code{struct yy_trans_info}, or
 @code{struct yy_trans_info*},  depending upon the values in the
-@code{td_flags}, @code{td_lolen}, and @code{td_hilen} fields.
+@code{td_flags}, @code{td_hilen}, and @code{td_lolen} fields.
 
 @item td_pad64[]
 Zero or more NULL bytes, padding the entire table to the next 64-bit boundary as
